#Использовать logos

Перем Лог;

Процедура Инфо()
    
    Лог = Логирование.ПолучитьЛог("oscript.app.messages");
    Лог.УстановитьУровень(УровниЛога.Отладка);
    
    Инфо = Новый СистемнаяИнформация();
    Лог.Отладка(Инфо.ПользовательОС);
    
    Старт = СтартовыйСценарий(); 
    Лог.Отладка(Старт);
    
    //Сообщить("Показать переменные среды? [y]es/[n]o");
    Строка = "";
    //ВвестиСтроку(Строка);
    
    //Сообщить(ФайловыеПотоки);
    
    Если Строка = "y" ИЛИ Строка = "Y" Тогда
        
        СИ = Новый СистемнаяИнформация();
        
        Для Каждого Переменная Из СИ.ПеременныеСреды() Цикл
            
            Лог.Отладка(Переменная.Ключ + " = " + Переменная.Значение);
            
        КонецЦикла;
        
    КонецЕсли;
    
    Итератор = 1;
    
    Пока Итератор <= 1 Цикл
        
        //++TODO to JSON
        МассивПроцессов     = Новый Массив;
        МассивИменПроцессов = Новый Массив; 
        МассивИменПроцессов.Добавить("1cv8c");
        МассивИменПроцессов.Добавить("1cv8t");
        МассивИменПроцессов.Добавить("1cv8");
        МассивИменПроцессов.Добавить("1cv8tc");
        //--TODO to JSON
        
        Для Каждого ИмяПроцесса Из МассивИменПроцессов Цикл
            
            ТемпМассивПроцессов = НайтиПроцессыПоИмени(ИмяПроцесса);
            
            Если ТемпМассивПроцессов.Количество() Тогда
                
                Для каждого ТемпПроцесс Из ТемпМассивПроцессов Цикл
                    
                    МассивПроцессов.Добавить(ТемпПроцесс);
            
                КонецЦикла;

            КонецЕсли;

        КонецЦикла;

        Лог.Отладка(ТипЗнч(МассивПроцессов));
        Лог.Отладка(МассивПроцессов.Количество());
        //
        ФайлПидов = Новый Файл(ОбъединитьПути(ТекущийКаталог(), "pids", "pid"));
        Лог.Отладка(ОбъединитьПути(ТекущийКаталог(), "pids","pid"));
        
        //Если ФайлПидов
        
        Для каждого ЗапущенныйПроцесс Из МассивПроцессов Цикл
        
            //sleep(3000);
            ЗапуститьПриложение("wmic /APPEND:" + ФайлПидов.ПолноеИмя + ЗапущенныйПроцесс.Идентификатор             //+ "_" + Итератор 
                                + " path Win32_PerfFormattedData_PerfProc_Process where CreatingProcessID=" + ЗапущенныйПроцесс.Идентификатор 
                                + " get PercentProcessorTime /FORMAT:CSV");     //CommandLine,Caption");
            ЗапуститьПриложение("wmic /APPEND:" + ФайлПидов.ПолноеИмя + ЗапущенныйПроцесс.Идентификатор             //+ "_" + Итератор 
                                + " process where ProcessID=" + ЗапущенныйПроцесс.Идентификатор 
                                + " get WorkingSetSize /FORMAT:CSV");     //CommandLine,Caption");
            
                                Лог.Отладка("wmic /APPEND:" + ФайлПидов.ПолноеИмя + ЗапущенныйПроцесс.Идентификатор             //+ "_" + Итератор 
                                + " path Win32_PerfFormattedData_PerfProc_Process where CreatingProcessID=" + ЗапущенныйПроцесс.Идентификатор 
                                + " get PercentProcessorTime /FORMAT:CSV");     //CommandLine,Caption");
            //wmic path Win32_PerfFormattedData_PerfProc_Process where CreatingProcessID=9348 get PercentProcessorTime,WorkingSet /FORMAT:table
            Лог.Отладка(ЗапущенныйПроцесс.Идентификатор);
            
        КонецЦикла;
        
        Итератор = Итератор + 1;
        //sleep(10000);
        
    КонецЦикла;
    
    РазобратьФайлыПидов();

КонецПроцедуры

Процедура РазобратьФайлыПидов();

    КаталогПидов = ОбъединитьПути(ТекущийКаталог(), "pids");
    МассивФайловПидов = НайтиФайлы(КаталогПидов, "pid*");
    Лог.Отладка(МассивФайловПидов.Количество());

    Для каждого ФайлПидов Из МассивФайловПидов Цикл

        Если ФайлПовисшейЗадачи(ФайлПидов) Тогда 
        
            УдалитьФайлы(ФайлПидов.ПолноеИмя);

        КонецЕсли;

    КонецЦикла;

КонецПроцедуры

Функция ФайлПовисшейЗадачи(ФайлДляРазбора)

    ИнформацияПоCPU = Новый РегулярноеВыражение("Node"); 
    Текст = Новый ЧтениеТекста(ФайлДляРазбора.ПолноеИмя);
    Сообщить(ИнформацияПоCPU.НайтиСовпадения(Текст.Прочитать()).Количество());

    Для каждого Переменная Из Коллекция Цикл
        
    КонецЦикла;

    Возврат Ложь;

КонецФункции

Файл = Новый Файл("C:\Users\admin\Documents\git\1nspector\pids\pid6732");
ФайлПовисшейЗадачи(Файл);

//Инфо();